version: '3.8'

services:
  # API Service with Security Components
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - SECURITY_JWT_SECRET_KEY=${SECURITY_JWT_SECRET_KEY}
      - SECURITY_MFA_ENABLED=true
      - SECURITY_AI_SECURITY_ENABLED=true
      - SECURITY_AUTO_DEFENSE_ENABLED=true
      - SECURITY_REDIS_HOST=redis
      - SECURITY_REDIS_PORT=6379
      - SECURITY_REDIS_DB=1
    depends_on:
      - redis
      - prometheus
    networks:
      - security_net

  # Redis for Security Data
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - security_net

  # Prometheus for Security Metrics
  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert.rules:/etc/prometheus/alert.rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - security_net

  # Grafana for Security Dashboard
  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - security_net

  # AlertManager for Security Alerts
  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - security_net

  # Node Exporter for System Metrics
  node_exporter:
    image: prom/node-exporter
    networks:
      - security_net

  # cAdvisor for Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - security_net

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  security_net:
    driver: bridge
