services:
  # Test Database
  test-db:
    image: postgres:15-alpine
    env_file:
      - .env.test
    environment:
      POSTGRES_DB: samoey_copilot_test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    networks:
      - test-network

  # Test Redis
  test-redis:
    image: redis:7-alpine
    env_file:
      - .env.test
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - test_redis_data:/data
    networks:
      - test-network

  # Test Application
  test-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    env_file:
      - .env.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://test:${DB_PASSWORD}@test-db:5432/samoey_copilot_test
      - REDIS_URL=redis://:${REDIS_PASSWORD}@test-redis:6379/0
      - TESTING=${TESTING}
      - CI=${CI}
    ports:
      - "3001:3000"
      - "8001:8000"
    depends_on:
      - test-db
      - test-redis
    volumes:
      - ./app:/app
      - ./frontend:/frontend
      - /app/node_modules
      - /frontend/node_modules
    networks:
      - test-network

  # Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    env_file:
      - .env.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://test:${DB_PASSWORD}@test-db:5432/samoey_copilot_test
      - REDIS_URL=redis://:${REDIS_PASSWORD}@test-redis:6379/0
      - TESTING=${TESTING}
      - CI=${CI}
    command: npm run test:ci
    depends_on:
      - test-db
      - test-redis
    volumes:
      - ./app:/app
      - ./frontend:/frontend
      - /app/node_modules
      - /frontend/node_modules
    networks:
      - test-network

volumes:
  test_postgres_data:
  test_redis_data:

networks:
  test-network:
    driver: bridge
