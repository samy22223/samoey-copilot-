name: Performance Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0'  # Weekly on Sunday at 3 AM

jobs:
  performance-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install locust pytest-benchmark

    - name: Run API performance tests with Locust
      run: |
        locust -f tests/performance/locustfile.py --headless --users 50 --spawn-rate 5 --run-time 60s --html locust-report.html
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/github_actions
        REDIS_URL: redis://localhost:6379/0

    - name: Run database performance benchmarks
      run: |
        python -m pytest tests/performance/test_database_performance.py --benchmark-only --benchmark-json=benchmark-results.json

    - name: Run API response time benchmarks
      run: |
        python -m pytest tests/performance/test_api_performance.py --benchmark-only --benchmark-json=api-benchmark-results.json

    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: |
          locust-report.html
          benchmark-results.json
          api-benchmark-results.json

    - name: Generate performance summary
      run: |
        echo "# Performance Test Report" > performance-summary.md
        echo "## Test Date: $(date)" >> performance-summary.md
        echo "" >> performance-summary.md
        echo "### Locust Results" >> performance-summary.md
        echo "Load test completed with 50 users over 60 seconds" >> performance-summary.md
        echo "" >> performance-summary.md
        echo "### Database Benchmark Results" >> performance-summary.md
        echo "\`\`\`" >> performance-summary.md
        cat benchmark-results.json >> performance-summary.md
        echo "\`\`\`" >> performance-summary.md
        echo "" >> performance-summary.md
        echo "### API Response Time Results" >> performance-summary.md
        echo "\`\`\`" >> performance-summary.md
        cat api-benchmark-results.json >> performance-summary.md
        echo "\`\`\`" >> performance-summary.md

    - name: Upload performance summary
      uses: actions/upload-artifact@v3
      with:
        name: performance-summary
        path: performance-summary.md

    - name: Comment performance results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('performance-summary.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Performance Test Results\n\n${summary}`
          });

  frontend-performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      working-directory: ./frontend
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
